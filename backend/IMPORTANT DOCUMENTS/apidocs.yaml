openapi: 3.0.3
info:
  title: Reselling Platform
  description: An API for a platform for buying and selling goods
  version: 1.0.0
servers:
- url: http://localhost:3000
  description: For testing locally
- url: https://webdwing-task2.onrender.com/
  description: Deployed
tags:
- name: Checks
  description: Health checks and Logging
- name: Auth
  description: User authentication and profile operations
- name: Products
  description: Product-related endpoints
- name: Cart
  description: Shopping cart operations
paths:
  /169/healthz:
    get:
      tags:
      - Checks
      summary: Check health
      responses:
        "200":
          description: OK
  /logs/recent:
    get:
      tags:
      - Checks
      summary: Get last 50 logs
      responses:
        "200":
          description: Logs retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/auth/register:
    post:
      tags:
      - Auth
      summary: Register User
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
        required: true
      responses:
        "201":
          description: User registered successfully
        "400":
          description: Bad request
  /api/auth/login:
    post:
      tags:
      - Auth
      summary: Login User
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/auth_login_body"
        required: true
      responses:
        "200":
          description: "Login successful, returns JWT"
        "401":
          description: Invalid credentials
  /api/auth/profile:
    get:
      tags:
      - Auth
      summary: Get user profile
      responses:
        "200":
          description: Profile retrieved successfully
        "401":
          description: Unauthorized
      security:
      - bearerAuth: []
    patch:
      tags:
      - Auth
      summary: Edit user profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/auth_profile_body"
        required: true
      responses:
        "200":
          description: Profile updated
        "401":
          description: Unauthorized
      security:
      - bearerAuth: []
  /api/content/products:
    get:
      tags:
      - Products
      summary: Get paginated products
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          default: 1
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          default: 10
      responses:
        "200":
          description: List of products
    post:
      tags:
      - Products
      summary: Add new product
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/content_products_body"
        required: true
      responses:
        "201":
          description: Product created
        "401":
          description: Unauthorized
      security:
      - bearerAuth: []
  /api/content/products/users/{userId}:
    get:
      tags:
      - Products
      summary: Get products of a particular seller
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Products retrieved
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - bearerAuth: []
  /api/content/products/{productId}:
    delete:
      tags:
      - Products
      summary: Delete product
      parameters:
      - name: productId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Product deleted
        "401":
          description: Unauthorized
      security:
      - bearerAuth: []
    patch:
      tags:
      - Products
      summary: Update product
      parameters:
      - name: productId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/products_productId_body"
        required: true
      responses:
        "200":
          description: Product updated
        "401":
          description: Unauthorized
      security:
      - bearerAuth: []
  /api/cart:
    get:
      tags:
      - Cart
      summary: View cart
      responses:
        "200":
          description: Cart retrieved
        "401":
          description: Unauthorized
      security:
      - bearerAuth: []
  /api/cart/product/{productId}:
    post:
      tags:
      - Cart
      summary: Add item to cart
      parameters:
      - name: productId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Item added
        "401":
          description: Unauthorized
      security:
      - bearerAuth: []
    delete:
      tags:
      - Cart
      summary: Delete item from cart
      parameters:
      - name: productId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Item removed
        "401":
          description: Unauthorized
      security:
      - bearerAuth: []
  /api/cart/checkout:
    post:
      tags:
      - Cart
      summary: Checkout cart
      parameters:
      - name: Idempotency-Key
        in: header
        required: false
        schema:
          type: string
      responses:
        "200":
          description: Checkout successful
        "401":
          description: Unauthorized
      security:
      - bearerAuth: []
components:
  schemas:
    User:
      type: object
      properties:
        _id:
          type: string
          example: 64f09f7da1b2c3d4e5f67888
        name:
          type: string
          example: John Doe
        email:
          type: string
          format: email
          example: john@example.com
        role:
          type: string
          example: seller
    Product:
      type: object
      properties:
        _id:
          type: string
          example: 64f0a1e1a1b2c3d4e5f67890
        sellerId:
          type: string
          example: 64f09f7da1b2c3d4e5f67888
        name:
          type: string
          example: Wireless Mouse
        description:
          type: string
          example: Ergonomic wireless mouse with USB receiver
        price:
          type: number
          example: 15.99
        category:
          type: string
          example: Electronics
        quantity:
          type: integer
          example: 10
        imageUrl:
          type: string
          example: https://example.com/images/mouse.jpg
        sku:
          type: string
          example: WM-001-2025
        likes:
          type: array
          example:
          - 64f09f7da1b2c3d4e5f67889
          - 64f09f7da1b2c3d4e5f6788a
          items:
            type: string
    Transaction:
      type: object
      properties:
        _id:
          type: string
          example: 64f1b2e1a1b2c3d4e5f67901
        buyer:
          type: string
          example: 64f09f7da1b2c3d4e5f67888
        sellerId:
          type: string
          example: 64f09f7da1b2c3d4e5f67889
        items:
          type: array
          items:
            $ref: "#/components/schemas/Transaction_items"
        totalAmount:
          type: number
          example: 31.98
        paymentStatus:
          type: string
          example: completed
          enum:
          - pending
          - completed
          - failed
        invoiceUrl:
          type: string
          example: https://example.com/invoices/64f1b2e1.pdf
        transactionTime:
          type: string
          format: date-time
          example: 2025-08-30T12:00:00Z
    auth_login_body:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
    auth_profile_body:
      type: object
      properties:
        location:
          type: string
        contact:
          type: string
        storeName:
          type: string
        rating:
          type: number
    content_products_body:
      required:
      - name
      - price
      type: object
      properties:
        name:
          type: string
          example: Wireless Mouse
        description:
          type: string
          example: Ergonomic wireless mouse with USB receiver
        price:
          type: number
          example: 15.99
        category:
          type: string
          example: Electronics
        quantity:
          type: integer
          example: 10
        imageUrl:
          type: string
          description: Upload product image
          format: binary
    products_productId_body:
      type: object
      properties:
        name:
          type: string
    Transaction_items:
      type: object
      properties:
        itemId:
          type: string
          example: 64f0a1e1a1b2c3d4e5f67890
        quantity:
          type: integer
          example: 2
        price:
          type: number
          example: 15.99
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
